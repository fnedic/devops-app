services:
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend

  backend:
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    ports:
      - "8080:8080"
    environment:
      DB_HOST_URL: mysql:3306/devopsdb?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      DB_USERNAME: root
      DB_KEY: ejemplo123
      # Variables de entorno para New Relic (Agente de Java)
      NEW_RELIC_APP_NAME: "devops-grupo10"
      NEW_RELIC_LICENSE_KEY: "199bbd86080e04d53bf03868cec42935FFFFNRAL"
      NEW_RELIC_LOG_LEVEL: "info"
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ejemplo123
      MYSQL_DATABASE: devopsdb
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$${MYSQL_ROOT_PASSWORD} --silent"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - mysql-data:/var/lib/mysql

  newrelic-infra:
    container_name: newrelic-infra
    build:
      context: ./newrelic/infrastructure
      dockerfile: Dockerfile
    cap_add:
      - SYS_PTRACE
    network_mode: bridge
    pid: host
    privileged: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
    restart: unless-stopped
volumes:
  mysql-data:
