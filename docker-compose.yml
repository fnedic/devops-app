version: "3.9"

services:
# ───────────────────────── FRONT ─────────────────────────
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend

# ───────────────────────── BACK ──────────────────────────
  backend:
    build:
      context: ./             
      dockerfile: backend/Dockerfile
    environment:
      # ① JDBC URL
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/devopsdb?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ${DB_ROOT_PWD}

      # ② New Relic
      NEW_RELIC_APP_NAME: devops-grupo10
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      NEW_RELIC_LOG_LEVEL: info

      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy

# ───────────────────────── DB ────────────────────────────
  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PWD}
      MYSQL_DATABASE: devopsdb
    ports:
      - "3307:3306"           # host:container
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$${MYSQL_ROOT_PASSWORD} --silent"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - mysql-data:/var/lib/mysql

# ────────────── New Relic Infrastructure Agent ───────────
  newrelic-infra:
    build: newrelic/infrastructure
    container_name: newrelic-infra
    privileged: true
    pid: host
    network_mode: bridge
    environment:
      NRIA_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      # opcional:
      NRIA_DISPLAY_NAME: devops-stack
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
    restart: unless-stopped

volumes:
  mysql-data:

